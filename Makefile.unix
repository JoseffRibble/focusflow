.PHONY: setup setup-backend setup-frontend format lint check pre-commit clean clean-backend clean-frontend clean-cache clean-env

# ---------------------------
# Setup full environment (backend + frontend)
# ---------------------------
setup: setup-backend setup-frontend

# Setup backend: create Conda env and install pre-commit hooks
setup-backend:
	conda env create -f environment.yml || echo "Environment may already exist"
	conda run -n focusflow pre-commit install

# Setup frontend: install Node packages
setup-frontend:
	cd frontend && npm install

# ---------------------------
# Code formatting
# ---------------------------
format:
	conda run -n focusflow black backend
	conda run -n focusflow ruff check backend --fix || echo "[INFO] Ruff finished with issues. Please fix manually."

# ---------------------------
# Linting
# ---------------------------
lint:
	conda run -n focusflow ruff check backend
	conda run -n focusflow mypy backend

# ---------------------------
# Full check: format + lint
# ---------------------------
check:
	conda run -n focusflow ruff check backend
	conda run -n focusflow black --check backend
	conda run -n focusflow mypy backend

# ---------------------------
# Run all pre-commit hooks
# ---------------------------
pre-commit:
	conda run -n focusflow pre-commit run --all-files

# ---------------------------
# Clean all temporary files (no environment deletion)
# ---------------------------
clean: clean-backend clean-frontend

# Clean backend Python cache files
clean-backend:
	find . -type d -name "__pycache__" -exec rm -r {} +
	find . -type f -name "*.pyc" -delete
	rm -rf .pytest_cache

# Clean frontend build and node_modules
clean-frontend:
	rm -rf frontend/node_modules
	rm -rf frontend/.next
	rm -rf frontend/dist
	rm -rf frontend/build
	rm -f frontend/package-lock.json

# ---------------------------
# Remove entire dev environment (backend + frontend)
# ---------------------------
clean-env: clean-backend clean-frontend
	conda remove --name focusflow --all -y || echo "Environment not found"
